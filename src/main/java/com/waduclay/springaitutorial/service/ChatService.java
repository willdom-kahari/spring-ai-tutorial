package com.waduclay.springaitutorial.service;

import com.waduclay.springaitutorial.dto.ApiResponse;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;

/**
 * Service interface for AI chat operations.
 * This interface defines the contract for AI chat functionality, providing a clean
 * separation between controller logic and business logic for AI interactions.
 * 
 * @author <a href="mailto:developer.wadu@gmail.com">Willdom Kahari</a>
 */
public interface ChatService {
    
    /**
     * Generates an AI response based on the provided message.
     * This method handles the core business logic for AI chat completion,
     * including prompt processing and response generation.
     * 
     * @param message the input message for the AI to respond to
     * @return ApiResponse containing the AI-generated response
     */
    ApiResponse<String> generateResponse(String message);
    
    /**
     * Generates an AI response using a simple prompt without parameters.
     * This method provides basic AI interaction with a fixed prompt structure.
     * 
     * @return ApiResponse containing a dad joke generated by the AI
     */
    ApiResponse<String> generateSimplePrompt();
    
    /**
     * Generates an AI response using parameterized prompt templates.
     * This method creates dynamic prompts by substituting variables in template strings.
     * 
     * @param genre the content genre for the prompt template
     * @return ApiResponse containing genre-specific AI response
     */
    ApiResponse<String> generatePromptTemplate(String genre);
    
    /**
     * Generates an AI response using external prompt template files.
     * This method loads prompt templates from external resource files for better
     * separation of concerns between code and content.
     * 
     * @param genre the content genre for the external template
     * @return ApiResponse containing AI response using external template
     */
    ApiResponse<String> generateExternalPromptTemplate(String genre);
    
    /**
     * Generates an AI response using system messages for behavior control.
     * This method demonstrates the use of system messages to define AI behavior
     * and constraints for contextual interactions.
     * 
     * @return ApiResponse containing AI response with system message constraints
     */
    ApiResponse<String> generateWithSystemMessage();

    ApiResponse<String> stuffThePrompt(@NotBlank(message = "Message cannot be blank") @Size(min = 1, max = 500, message = "Message must be between 1 and 500 characters") String message, boolean stuffit);
}
